"""Initial migration

Revision ID: def25767c028
Revises: 
Create Date: 2024-10-18 09:58:11.201873

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'def25767c028'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('notifications',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('item_id', sa.Integer(), nullable=False),
        sa.Column('message', sa.Text(), nullable=False),
        sa.Column('timestamp', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['item_id'], ['items.id'], name=op.f('fk_notifications_item_id_items')),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table('products',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=150), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('price', sa.Float(), nullable=False),
        sa.Column('item_availability', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_products_user_id_users')),
        sa.PrimaryKeyConstraint('id')
    )

    with op.batch_alter_table('items', schema=None) as batch_op:
        batch_op.alter_column('items_available',
            existing_type=sa.VARCHAR(),
            type_=sa.Integer(),
            nullable=False,
            postgresql_using='items_available::integer'  # Specify how to convert existing data
        )

    with op.batch_alter_table('special_categories', schema=None) as batch_op:
        batch_op.drop_constraint('special_categories_name_key', type_='unique')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('role', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('is_active', sa.Boolean(), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_column('is_active')
        batch_op.drop_column('role')

    with op.batch_alter_table('special_categories', schema=None) as batch_op:
        batch_op.create_unique_constraint('special_categories_name_key', ['name'])

    with op.batch_alter_table('items', schema=None) as batch_op:
        batch_op.alter_column('items_available',
            existing_type=sa.Integer(),
            type_=sa.VARCHAR(),
            nullable=True
        )

    op.drop_table('products')
    op.drop_table('notifications')
    # ### end Alembic commands ###
